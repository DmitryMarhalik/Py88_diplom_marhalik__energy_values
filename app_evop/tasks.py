from django.http import HttpResponse
from django.core.mail import send_mail, BadHeaderError
from django.conf import settings
from celery import shared_task

from app_evop.models import Category
from products_parser.add_to_db import add_products_to_db, add_dishes_to_db
from products_parser.get_evop_from_site import products_by_category, evop_first_dishes, names_first_dishes, \
    names_second_dishes, evop_second_dishes, name_salads, evop_salads
from products_parser.transformaton_data import make_dict_dishes


@shared_task()
def send_email_task(user_email, message):
    """
    Sends an email when the feedback or add-food form has been submitted.
    """
    # sleep(20)  # Simulate expensive operation(s) that freeze Django
    try:
        send_mail('EVOP app',
                  message=message,
                  from_email=user_email,
                  recipient_list=[settings.EMAIL_HOST_USER],
                  )
    except BadHeaderError:
        return HttpResponse('Incorrect header found')


# BadHeaderError, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤—Å—Ç–∞–≤–∫—É –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏
# –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã. –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω ‚Äú–ø–ª–æ—Ö–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫‚Äù,
# —Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç—É HttpResponse —Å —Ç–µ–∫—Å—Ç–æ–º ‚ÄúIncorrect header found‚Äù.

################################################################################################################
@shared_task()
def update_products_in_the_db():
    added_products = []
    for category_id, list_products in products_by_category.items():
        new_products = add_products_to_db(list_products, category_id)
        if new_products:
            added_products.extend(new_products)
    return added_products


# products_by_category = {'1': ['–ë—ã—á–æ–∫', '17,5', '2', '-', '88', '–í–æ–±–ª–∞', '18', '2,8', '-', '95', '–ì–æ—Ä–±—É—à–∞', '20,5',.],
# '2': ['–û–±–ª–µ–ø–∏—Ö–∞','1.2', '5.4',' 5.7', '82.0', '2']....

# category= {'seafoods': '1', 'vegetables_fruits_berries': '2', 'butter_margarine_edible': '3', 'drinks':'4',
# eggs_milk_dairy': '5', 'meat_sausage_products': '6', 'bakery_cereals_pasta': '7', 'nuts_mushrooms': '8',
# 'confectionery_products': '9','legumes': '10'}

################################################################################################################
@shared_task()
def update_dishes_in_the_db():
    added_dishes = (add_dishes_to_db(make_dict_dishes(names_first_dishes, evop_first_dishes),
                             Category.objects.get(name='üçù Dishes').id) +
                    add_dishes_to_db(make_dict_dishes(names_second_dishes, evop_second_dishes),
                             Category.objects.get(name='üçù Dishes').id) +
                    add_dishes_to_db(make_dict_dishes(name_salads, evop_salads),
                             Category.objects.get(name='ü•ó Salads').id))
    return added_dishes
# name_salads(first or second dishes)=['–í–∏–Ω–µ–≥—Ä–µ—Ç', '–í–∏–Ω–µ–≥—Ä–µ—Ç –∏–∑ –æ–≤–æ—â–µ–π', '–í–∏–Ω–µ–≥—Ä–µ—Ç –∏–∑ –æ–≤–æ—â–µ–π –∏ —Ñ—Ä—É–∫—Ç–æ–≤',
#                                         '–í–∏–Ω–µ–≥—Ä–µ—Ç –∏–∑ –æ–≤–æ—â–µ–π, —è–±–ª–æ–∫ –∏ –∑–µ–ª–µ–Ω–∏','–í–∏–Ω–µ–≥—Ä–µ—Ç –∏–∑ –ø–µ—Ä—Ü–∞ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º', ...]
# evop_salads(first or second dishes)=['130,1 –∫–ö–∞–ª', '1,7 –≥', '10,3 –≥', '8,2 –≥', '176,9 –∫–ö–∞–ª', '1,9 –≥', '13,9 –≥',
#                                                                                          '11,7 –≥', '137,4 –∫–ö–∞–ª',...]
# dict_dishes={'–ë–æ—Ä—â': ['57.7 ', '3.8  ', '2.9  ', '4.3  '],'–ë–æ—Ä—â –∏–∑ —Å–≤–µ–∂–µ–π '–∫–∞–ø—É—Å—Ç—ã –∏ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è –ø–æ 1-110':
#                                                                                  ['36 ', '1  ', '1.1  ', '5.4  '],.}
